{"ast":null,"code":"//Rest APIs for category\n\nexport const fetchAllCategories = accessToken => {\n  //Note: we are returning promise so that we can resolve it by using appropriate data type like json or text\n  //caller of the function should only be concerned with returned data on success or failure message\n  let promiseResolveRef = null;\n  let promiseRejectRef = null;\n  let promise = new Promise((resolve, reject) => {\n    promiseResolveRef = resolve;\n    promiseRejectRef = reject;\n  });\n  fetch('https://dev-project-ecommerce.upgrad.dev/api/products/categories', {\n    method: 'GET',\n    headers: {\n      'x-auth-token': accessToken\n    }\n  }).then(response => {\n    response.json().then(json => {\n      //capitalise every category\n      //show only unique\n      let arr = [];\n      for (let i = 0; i < json.length; i++) {\n        let c = json[i].toUpperCase();\n        if (!arr.includes(c)) {\n          arr.push(c);\n        }\n      }\n      arr.sort();\n      arr = [\"ALL\", ...arr];\n      if (response.ok) {\n        promiseResolveRef({\n          data: arr,\n          response: response\n        });\n      } else {\n        promiseRejectRef({\n          reason: \"Server error occurred.\",\n          response: response\n        });\n      }\n    });\n  }).catch(err => {\n    promiseRejectRef({\n      reason: \"Some error occurred.\",\n      response: err\n    });\n  });\n  return promise;\n};","map":{"version":3,"names":["fetchAllCategories","accessToken","promiseResolveRef","promiseRejectRef","promise","Promise","resolve","reject","fetch","method","headers","then","response","json","arr","i","length","c","toUpperCase","includes","push","sort","ok","data","reason","catch","err"],"sources":["/Users/macbook/Downloads/upGrad-Eshop-Application-main/src/api/categoryAPIs.js"],"sourcesContent":["//Rest APIs for category\n\nexport const fetchAllCategories = (accessToken) => {\n\t//Note: we are returning promise so that we can resolve it by using appropriate data type like json or text\n\t//caller of the function should only be concerned with returned data on success or failure message\n\tlet promiseResolveRef = null;\n\tlet promiseRejectRef = null;\n\tlet promise = new Promise((resolve, reject) => {\n\t\tpromiseResolveRef = resolve;\n\t\tpromiseRejectRef = reject;\n\t});\n\tfetch('https://dev-project-ecommerce.upgrad.dev/api/products/categories', {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'x-auth-token': accessToken,\n\t\t},\n\t}).then((response) => {\n\t\tresponse.json().then((json) => {\n\t\t\t//capitalise every category\n\t\t\t//show only unique\n\t\t\tlet arr = [];\n\t\t\tfor(let i = 0; i < json.length; i++) {\n\t\t\t\tlet c = json[i].toUpperCase();\n\t\t\t\tif(!arr.includes(c)) {\n\t\t\t\t\tarr.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr.sort();\n\t\t\tarr = [\"ALL\", ...arr];\n\t\t\tif(response.ok) {\n\t\t\t\tpromiseResolveRef({\n\t\t\t\t\tdata: arr,\n\t\t\t\t\tresponse: response,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpromiseRejectRef({\n\t\t\t\t\treason: \"Server error occurred.\",\n\t\t\t\t\tresponse: response,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}).catch((err) => {\n\t\tpromiseRejectRef({\n\t\t\treason: \"Some error occurred.\",\n\t\t\tresponse: err,\n\t\t});\n\t});\n\treturn promise;\n};"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,kBAAkB,GAAIC,WAAW,IAAK;EAClD;EACA;EACA,IAAIC,iBAAiB,GAAG,IAAI;EAC5B,IAAIC,gBAAgB,GAAG,IAAI;EAC3B,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC9CL,iBAAiB,GAAGI,OAAO;IAC3BH,gBAAgB,GAAGI,MAAM;EAC1B,CAAC,CAAC;EACFC,KAAK,CAAC,kEAAkE,EAAE;IACzEC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACR,cAAc,EAAET;IACjB;EACD,CAAC,CAAC,CAACU,IAAI,CAAEC,QAAQ,IAAK;IACrBA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEE,IAAI,IAAK;MAC9B;MACA;MACA,IAAIC,GAAG,GAAG,EAAE;MACZ,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QACpC,IAAIE,CAAC,GAAGJ,IAAI,CAACE,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;QAC7B,IAAG,CAACJ,GAAG,CAACK,QAAQ,CAACF,CAAC,CAAC,EAAE;UACpBH,GAAG,CAACM,IAAI,CAACH,CAAC,CAAC;QACZ;MACD;MACAH,GAAG,CAACO,IAAI,CAAC,CAAC;MACVP,GAAG,GAAG,CAAC,KAAK,EAAE,GAAGA,GAAG,CAAC;MACrB,IAAGF,QAAQ,CAACU,EAAE,EAAE;QACfpB,iBAAiB,CAAC;UACjBqB,IAAI,EAAET,GAAG;UACTF,QAAQ,EAAEA;QACX,CAAC,CAAC;MACH,CAAC,MAAM;QACNT,gBAAgB,CAAC;UAChBqB,MAAM,EAAE,wBAAwB;UAChCZ,QAAQ,EAAEA;QACX,CAAC,CAAC;MACH;IACD,CAAC,CAAC;EACH,CAAC,CAAC,CAACa,KAAK,CAAEC,GAAG,IAAK;IACjBvB,gBAAgB,CAAC;MAChBqB,MAAM,EAAE,sBAAsB;MAC9BZ,QAAQ,EAAEc;IACX,CAAC,CAAC;EACH,CAAC,CAAC;EACF,OAAOtB,OAAO;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}